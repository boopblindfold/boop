# Generated by Django 2.0.2 on 2018-04-18 01:26

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'answer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'choice',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
                ('uuid', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=45, null=True)),
                ('last_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'contact',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contactlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'contactlist',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Text', 'Text'), ('Multiple Choice', 'Multiple Choice'), ('True or False', 'True or False'), ('Range', 'Range')], max_length=15)),
                ('description', models.CharField(max_length=200)),
                ('choices', models.TextField(blank=True, help_text='Provide a dash-separated list of options for this question .', null=True)),
                ('RangeMax', models.IntegerField(blank=True, null=True)),
                ('image', models.FileField(blank=True, upload_to='uploads/')),
            ],
            options={
                'db_table': 'question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('deadline_Date', models.DateField(blank=True, db_column='deadline_Date')),
                ('description', models.TextField()),
                ('survey_pin', models.CharField(blank=True, max_length=45, null=True)),
                ('survey_type', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Quick', 'Quick')], max_length=6, null=True)),
            ],
            options={
                'db_table': 'survey',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.CharField(db_column='pin', default=uuid.uuid4, max_length=100, unique=True)),
                ('has_answered', models.IntegerField(default=0)),
                ('survey_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Survey')),
            ],
            options={
                'db_table': 'token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('profile', models.FileField(blank=True, upload_to='uploads/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'userprofile',
                'managed': True,
            },
            managers=[
                ('manager', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='survey',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='surveyid',
            field=models.ForeignKey(blank=True, db_column='surveyid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Survey'),
        ),
        migrations.AddField(
            model_name='contactlist',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='contactlistid',
            field=models.ForeignKey(blank=True, db_column='contactlistid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Contactlist'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='token_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Survey.Token'),
        ),
    ]
